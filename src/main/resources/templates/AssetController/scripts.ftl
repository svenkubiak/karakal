const api="${api}",appId="${appId}",container=document.getElementById("karakal-auth");function success(){return'\n<main>\n  <div class="auth-box">\n    <div class="content has-text-centered">\n      <div class="icon is-large has-text-success" style="font-size: 3rem;">✓</div>\n      <h1 class="title is-4 has-text-success">Success!</h1>\n      <p class="subtitle is-6">Your registration was completed successfully.</p>\n    </div>\n    <div class="mt-4 has-text-centered"">\n      <button class="button is-primary is-fullwidth" id="to-login">Sign in now</button>\n    </div>\n</div>\n</main>\n'}function error(){return'\n<main>\n<div class="auth-box">\n    <div class="content has-text-centered">\n      <div class="icon is-large has-text-danger" style="font-size: 3rem;">✕</div>\n      <h1 class="title is-4 has-text-danger">Error!</h1>\n      <p class="subtitle is-6">Oops... something went wrong.<br>Please try again.</p>\n    </div>\n    <div class="mt-4 has-text-centered">\n      <button class="button is-danger is-fullwidth" id="try-again">Try again</button>\n    </div>\n</div>\n</main>\n'}function loginForm(){return'\n<main>\n  <div class="auth-box">\n    <h1 class="title auth-title">Sign In</h1>\n    <p class="auth-subtitle">Please enter your email address to sign in.</p>\n    <form>\n      <div class="field">\n        <label class="label">Email Address</label>\n        <div class="control">\n          <input class="input" id="username" name="username" type="email" placeholder="your@email.com" required autocomplete="username">\n        </div>\n      </div>\n      <button class="button is-link" id="login-init">Sign In</button>\n    </form>\n    <#if registration>\n    <div class="alt-link">\n      Don’t have an account? <a href="#" id="register-form">Register</a>\n    </div>\n    </#if>\n        <div class="alt-link" id="different-account">\n      <a href="#" id="use-different-account">Sign in with another account</a>\n    </div>\n  </div>\n</main>\n'}function registerForm(){return'\n<main>\n  <div class="auth-box" id="register">\n    <h1 class="title auth-title">Register</h1>\n    <p class="auth-subtitle">Create an account to get started.</p>\n      <div class="field">\n        <label class="label">Email Address</label>\n        <div class="control">\n          <input class="input" id="username" name="username" type="email" placeholder="your@email.com" required autocomplete="username">\n        </div>\n      </div>\n      <button class="button is-link" id="register-init">Register</button>\n    </form>\n    <div class="alt-link">\n      Already have an account? <a href="#" id="login-form">Sign In</a>\n    </div>\n  </div>\n</main>\n'}if(""===api.trim()&&(console.log("data-api is missing or empty"),container&&(container.innerHTML=error())),appId&&""!==appId.trim()||(console.log("data-application-id is missing or empty"),container&&(container.innerHTML=error())),container||console.log("Container element with id 'karakal-auth' does not exist"),api&&""!==api.trim()&&appId&&""!==appId.trim()&&container){function loadCss(e){return new Promise(((n,t)=>{const a=document.createElement("link");a.rel="stylesheet",a.href=e,a.onload=()=>n(),a.onerror=()=>t(new Error("CSS load failed: "+e)),document.head.appendChild(a)}))}function base64urlToBuffer(e){if("string"!=typeof e){if(e instanceof ArrayBuffer)return e;if(ArrayBuffer.isView(e))return e.buffer}let n=e.replace(/-/g,"+").replace(/_/g,"/");for(;n.length%4;)n+="=";let t=atob(n),a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return a.buffer}function bufferToBase64Url(e){let n=new Uint8Array(e),t="";for(let e=0;e<n.length;++e)t+=String.fromCharCode(n[e]);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}async function register(e){const n=await fetch("${api}/api/v1/register-init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,appId:appId})});if(n.ok){const t=await n.json();"object"==typeof t.challenge&&null!==t.challenge&&"value"in t.challenge?t.challenge=base64urlToBuffer(t.challenge.value):"string"==typeof t.challenge&&(t.challenge=base64urlToBuffer(t.challenge)),"string"==typeof t.user.id&&(t.user.id=base64urlToBuffer(t.user.id));const a=await navigator.credentials.create({publicKey:t}),i={id:a.id,rawId:bufferToBase64Url(a.rawId),type:a.type,response:{clientDataJSON:bufferToBase64Url(a.response.clientDataJSON),attestationObject:bufferToBase64Url(a.response.attestationObject)},authenticatorAttachment:a.authenticatorAttachment};if((await fetch("${api}/api/v1/register-complete",{method:"POST",headers:{"Content-Type":"application/json","karakal-username":e,"karakal-app-id":appId},body:JSON.stringify(i)})).ok){container.innerHTML=success();document.getElementById("to-login").addEventListener("click",(function(e){e.preventDefault(),showForm("login")}))}else container.innerHTML=error()}else container.innerHTML=error()}async function login(e){const n=await fetch("${api}/api/v1/login-init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,appId:appId})});if(n.ok){const t=await n.json();t.allowCredentials.forEach((e=>{"string"==typeof e.id&&(e.id=base64urlToBuffer(e.id))})),"string"==typeof t.challenge&&(t.challenge=base64urlToBuffer(t.challenge));const a=await navigator.credentials.get({publicKey:t}),i=await fetch("${api}/api/v1/login-complete",{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json","karakal-username":e,"karakal-app-id":appId}});if(i.ok){localStorage.setItem("username",e);const n=await i.json(),t=n.name,a=n.jwt,r=n.maxAge,o=n.redirect;document.cookie=encodeURIComponent(t)+"="+encodeURIComponent(a)+"; max-age="+r+"; path=/; SameSite=Strict; Secure",window.location.replace(o)}else container.innerHTML=error()}else container.innerHTML=error()}function showForm(e){if("login"===e){container.innerHTML=loginForm();const e=document.getElementById("username");if(e){const n=localStorage.getItem("username");if(null!=n&&""!==n)e.value=n,document.getElementById("username").disabled=!0;else{const e=document.getElementById("different-account");e&&e.remove()}}const n=document.getElementById("use-different-account");n&&n.addEventListener("click",(e=>{e.preventDefault(),document.getElementById("username").disabled=!1,document.getElementById("username").value="",localStorage.removeItem("username");const n=document.getElementById("different-account");n&&n.remove()}));const t=document.getElementById("login-init");t&&(t.addEventListener("click",(function(e){e.preventDefault();const n=document.getElementById("username").value;n&&login(n)})),document.getElementById("username").addEventListener("keydown",(function(e){if("Enter"===e.key){e.preventDefault();const n=document.getElementById("username").value;n&&login(n)}})));const a=document.getElementById("register-form");a&&a.addEventListener("click",(function(e){e.preventDefault(),showForm("register")}))}else{container.innerHTML=registerForm();const e=document.getElementById("register-init");e&&(e.addEventListener("click",(function(e){e.preventDefault();const n=document.getElementById("username").value;n&&register(n)})),document.getElementById("username").addEventListener("keydown",(function(e){if("Enter"===e.key){e.preventDefault();const n=document.getElementById("username").value;n&&register(n)}})));const n=document.getElementById("login-form");n&&n.addEventListener("click",(function(e){e.preventDefault(),showForm("login")}))}}console.log("karakal-auth-init complete"),Promise.all([loadCss("${api}/assets/css/bulma.min.css"),loadCss("${api}/api/v1/assets/${appId}/karakal.min.css")]).then((()=>{showForm("login")}));const e=document.getElementById("try-again");e&&e.addEventListener("click",(function(e){e.preventDefault(),showForm("login")}))}
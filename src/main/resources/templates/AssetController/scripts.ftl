const api="${api}",appId="${appId}",container=document.getElementById("karakal-auth");function success(){return'\n<div class="card success-card">\n    <div class="header">\n        <div class="logo">✓</div>\n        <h1>Success!</h1>\n        <p class="lead">Your registration was completed successfully.</p>\n    </div>\n    <div class="button-container">\n        <button class="btn" id="to-login">Sign in now</button>\n    </div>\n</div>\n'}function error(){return'\n<div class="card error-card">\n    <div class="header">\n        <div class="logo">✕</div>\n        <h1>Error!</h1>\n        <p class="lead">Oops... something went wrong. Please try again.</p>\n    </div>\n    <div class="button-container">\n        <button class="btn" id="to-register">Try again</button>\n    </div>\n</div>\n'}if(""===api.trim()&&(console.log("data-api is missing or empty"),container&&(container.innerHTML=error())),appId&&""!==appId.trim()||(console.log("data-application-id is missing or empty"),container&&(container.innerHTML=error())),container||console.log("Container element with id 'karakal-auth' does not exist"),api&&""!==api.trim()&&appId&&""!==appId.trim()&&container){function base64urlToBuffer(e){if("string"!=typeof e){if(e instanceof ArrayBuffer)return e;if(ArrayBuffer.isView(e))return e.buffer}let n=e.replace(/-/g,"+").replace(/_/g,"/");for(;n.length%4;)n+="=";let t=atob(n),a=new Uint8Array(t.length);for(let e=0;e<t.length;e++)a[e]=t.charCodeAt(e);return a.buffer}function bufferToBase64Url(e){let n=new Uint8Array(e),t="";for(let e=0;e<n.length;++e)t+=String.fromCharCode(n[e]);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}async function registerInit(e){const n=await fetch("${api}/api/v1/register-init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,appId:appId})});let t=await n.json();"object"==typeof t.challenge&&null!==t.challenge&&"value"in t.challenge?t.challenge=base64urlToBuffer(t.challenge.value):"string"==typeof t.challenge&&(t.challenge=base64urlToBuffer(t.challenge)),"string"==typeof t.user.id&&(t.user.id=base64urlToBuffer(t.user.id));const a=await navigator.credentials.create({publicKey:t}),i={id:a.id,rawId:bufferToBase64Url(a.rawId),type:a.type,response:{clientDataJSON:bufferToBase64Url(a.response.clientDataJSON),attestationObject:bufferToBase64Url(a.response.attestationObject)},authenticatorAttachment:a.authenticatorAttachment};if(200===(await fetch("${api}/api/v1/register-complete",{method:"POST",headers:{"Content-Type":"application/json","karakal-username":e,"karakal-app-id":appId},body:JSON.stringify(i)})).status){container.innerHTML=success();document.getElementById("to-login").addEventListener("click",(function(e){e.preventDefault(),showForm("login")}))}else{container.innerHTML=error();document.getElementById("to-register").addEventListener("click",(function(e){e.preventDefault(),showForm("register")}))}}async function loginInit(e){const n=await fetch("${api}/api/v1/login-init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({username:e,appId:appId})}),t=await n.json();t.allowCredentials.forEach((e=>{"string"==typeof e.id&&(e.id=base64urlToBuffer(e.id))})),"string"==typeof t.challenge&&(t.challenge=base64urlToBuffer(t.challenge));const a=await navigator.credentials.get({publicKey:t}),i=await fetch("${api}/api/v1/login-complete",{method:"POST",body:JSON.stringify(a),headers:{"Content-Type":"application/json","karakal-username":e,"karakal-app-id":appId}});200===i.status?(localStorage.setItem("username",e),window.location.replace(i.headers.get("karakal-login-redirect"))):container.innerHTML=error()}function getLoginFormHTML(){return'\n<main class="card" role="main">\n    <div class="header">\n        <h1>Sign In</h1>\n        <p class="lead">Please enter your email address to sign in.</p>\n    </div>\n    <div class="input-group">\n        <label for="username">Email Address</label>\n        <div class="input">\n            <input id="username" name="username" type="text" placeholder="Your email address" required autocomplete="username" />\n        </div>\n <div class="field has-addons" id="different-account">\n  <p class="control is-expanded has-text-centered">\n    <span class="small-text has-text-centered"><a href="#" id="use-different-account">Sign in with another account</a></span>\n  </p>\n</div>\n    </div>\n    <div class="button-container">\n        <button class="btn" id="login-init">Sign In</button>\n    </div>\n    <#if registration>\n        <div class="footer">\n            Don’t have an account? <a href="#" id="register-form">Register now</a>\n        </div>\n    </#if>\n</main>\n'}function getRegisterFormHTML(){return'\n<main class="card" role="main">\n    <div class="header">\n        <h1>Registration</h1>\n        <p class="lead">Please enter an email address to register.</p>\n    </div>\n    <div class="input-group">\n        <label for="username">Email Address</label>\n        <div class="input">\n            <input id="username" name="username" type="text" placeholder="Your email address" required autocomplete="username" />\n        </div>\n    </div>\n    <div class="button-container">\n        <button class="btn" id="register-init">Register</button>\n    </div>\n    <div class="footer">\n        Already have an account? <a href="#" id="login-form">Sign in now</a>\n    </div>\n</main>\n'}function showForm(e){if("login"===e){container.innerHTML=getLoginFormHTML();const e=document.getElementById("username");if(e){const n=localStorage.getItem("username");null!=n&&""!==n&&(e.value=n,document.getElementById("username").disabled=!0)}const n=document.getElementById("use-different-account");n&&n.addEventListener("click",(e=>{e.preventDefault(),document.getElementById("username").disabled=!1,document.getElementById("username").value="",localStorage.removeItem("username");const n=document.getElementById("different-account");n&&n.remove()}));const t=document.getElementById("login-init");t&&t.addEventListener("click",(function(e){e.preventDefault();const n=document.getElementById("username").value;n&&loginInit(n)}));const a=document.getElementById("register-form");a&&a.addEventListener("click",(function(e){e.preventDefault(),showForm("register")}))}else{container.innerHTML=getRegisterFormHTML();const e=document.getElementById("register-init");e&&e.addEventListener("click",(function(e){e.preventDefault();const n=document.getElementById("username").value;n&&registerInit(n)}));const n=document.getElementById("login-form");n&&n.addEventListener("click",(function(e){e.preventDefault(),showForm("login")}))}}console.log("Karakal-Auth-Init complete"),showForm("login")}